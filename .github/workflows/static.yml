# Simple workflow for deploying static content to GitHub Pages
name: Build and deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare environment
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - run: npm install --global pnpm
      - name: Install deps
        run: pnpm m i
      - name: Build plugin(s)
        run: node ./build.mjs
      - name: Copy additional files
        run: |
          cp README.md dist/README.md
          printf -- "---\npermalink: /404.html\n---\n" > dist/404.md
          printf -- "> **Note:** You accessed a link that returned a 404, probably by clicking one of the plugin links. You're supposed to copy the link address and add it into Vendetta.\n\n" >> dist/404.md
          cat README.md >> dist/404.md
      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          # Makes it so the md files in the previous step get processed by GitHub Pages
          enable_jekyll: true
          # This creates the CNAME file required to host GitHub Pages on a custom domain
          # cname: example.com
